package com.oracle.xmlns.primavera.p6.ws.udftype.v1;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.11
 * 2018-04-24T11:48:14.036+05:30
 * Generated source version: 3.1.11
 * 
 */
@WebServiceClient(name = "UDFTypeService", 
                  wsdlLocation = "https://nyuhospitals-p6.oracleindustry.com/p6ws/services/UDFTypeService?wsdl",
                  targetNamespace = "http://xmlns.oracle.com/Primavera/P6/WS/UDFType/V1") 
public class UDFTypeService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://xmlns.oracle.com/Primavera/P6/WS/UDFType/V1", "UDFTypeService");
    public final static QName UDFTypePort = new QName("http://xmlns.oracle.com/Primavera/P6/WS/UDFType/V1", "UDFTypePort");
    static {
        URL url = null;
        try {
            url = new URL("https://nyuhospitals-p6.oracleindustry.com/p6ws/services/UDFTypeService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(UDFTypeService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://nyuhospitals-p6.oracleindustry.com/p6ws/services/UDFTypeService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public UDFTypeService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public UDFTypeService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UDFTypeService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public UDFTypeService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public UDFTypeService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public UDFTypeService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns UDFTypePortType
     */
    @WebEndpoint(name = "UDFTypePort")
    public UDFTypePortType getUDFTypePort() {
        return super.getPort(UDFTypePort, UDFTypePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UDFTypePortType
     */
    @WebEndpoint(name = "UDFTypePort")
    public UDFTypePortType getUDFTypePort(WebServiceFeature... features) {
        return super.getPort(UDFTypePort, UDFTypePortType.class, features);
    }

}
